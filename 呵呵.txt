       今天闲来无聊想看看有什么游戏可以玩，想到了windows自带的小游戏――扫雷，可是打开电脑之后发现win8根本没有自带这个小游戏，好吧，自己下载，简单，中等，困难，各玩了几局之后，有输有赢，这几局扫雷中有的靠一个个格子的计算，也有时候只能靠猜测，可能成功，当然也肯能是失败。
       扫雷，一个伴随这window 3.1 横空出世的一款广受欢迎的小游戏，其实很少人知道，扫雷从算法角度上来说其实是一个NP完全问题，只知道从小就见过扫雷，一直不会玩，也忘了什么时候开始会玩的，闲来无事打发一下时间，挑战一下自己的记录，一遍遍刷新着，这其中带给我的却真正不少。人生就像扫雷，玩过扫雷的都知道，扫雷是有一些简单的定式的，有了这些可以提高很大的效率，而如果记不住现场推理，那么别人完成一局的时间可能会比你推理出一个方格所需的时间还短。扫雷的每一步就像人生走的下一步，有的人只为求快，把鼠标点的频率很高，一不小心就可能Game Over，所以要稳中求胜。有的人喜欢NF（No Flag）即盲扫，而有的人则总是用FL（Flag）即发现一个雷就用小旗标记，但这样的速度就会明显降低。
        有时候鼠标点击之后一个大好局面出现在面前，这时候需要你压住内心的激动，采用一些技巧，比如说局部优化，不断扩大优势，而有时候遇到的只是一个纠结的局面，等待你去猜测下一步该怎么做，虽然大多时候可以通过计算推理得到下一个空方格，也有可能计算不出来，这时候只能靠猜，这就是人生，有的人一出生面对的就是大好局面，而有的人只能面对这纠结的世界，甚至只能靠那么一点点运气，但是即使局面太差，只能是靠运气，也不能自暴自弃，去努力排除那些绝不可能的答案，给自己提高一点成功概率。即使那些一开始局面很好，也会因为不好好珍惜，浪费大好开局，因为时间是一直在流动，你多浪费一点，就落后人一份，这就是竞争。有的人开始的时候一帆风顺，但到了最后却遇到了LC （Lose on the last click）局面，即打开最后一个方格时不幸踩雷。但即使是遇到这种局面不同的人采用的方法也不同，有的人遇到需要猜的局面马上就猜，而有的人却留到最后再猜，其实当断则断，既然总是要猜的不如早猜，即使猜错了，早点猜错也比晚点猜错好，因为结果都是一样的，早点猜错却能节省大量时间。然而即使都选择早猜每个的做法也不一样，有的人坚决果断二选一，或者三选一等等，而又的人却纠结再三，到底选哪个，其实这都没有必要，既然已经是猜了，拼的就是个概率，赢得就是个人品，那还不坚决果断，万一猜中可以领先别人好多时间，退一步即使猜错也能早一点重新开始。即使同样是猜错了，不同的人又有不同的反应，有的人微微一笑从头再来，有的人懊丧不已，记挂半天。人生就是这样，需要好的人生态度，要知道：丧失好局不要恨，既然有缘定有份。
        扫雷需要反应速度，也需要技巧，比如有的局面如1-2-1，2-3-……-3-2，2-2-1-2-2等都是可以直接判断的，而这些技巧就像我们现在一直在学习的，你不可能把将来可能遇到的情况全部学完，甚至在你学的时候甚至不知道将来什么时候会用到，但是这些依然要学，因为一旦用到，这就是财富。多学一点，将来总会有用的。
       这就是扫雷中的人生……


         自从开始学计算机，就被人泼了太多的冷水，不是说专业不好找工作，就是说学起来没有前途，说什么所有的专业都开计算机课，而真正学这个专业的就没什么优势了，就这样，在所有不看好的人眼里慢慢的成长。
         一点点的激情，一点点的执着，我一步步走到今天，也会一直走下去，从最初的连C语言都学的很吃力，到开始慢慢能写代码，接着C++，java，然后真正开始思考，一种技术，一种算法，一个软件，一种设计理念，一种设计模式，从计算机组成到计算机操作系统，慢慢的了解的越来越多，才发现自己不知道的东西越来越多，但是还是不断努力做好自己在做的事，不管是设计还是实践，都尽力尽量做的更加完美，而ACM竞赛在这方面带给我的确实太多了，不说算法思想，或者代码能力的提高，最重要的是引导这我对完美的不断追求。
        一点点的积累，一点点的记录，一步步学到今天，从清晨的第一缕阳光到傍晚的最后一片晚霞，都见证着所有的努力，学的差的时候，我让自己多点耐心，多点努力，学的好的时候我让自己静下心来多点思考，多点谦逊，让自己不断进步。
        有时候觉得自己需要一点鼓励让自己更加坚持走下去，有时候又觉得没什么必要，不需要坚持自己已经走到今天，还怕走不到尽头，路还长，谁又知道下一刻会发生什么，有时候学习会太累，因为刚学会一种东西发现第二天它就过时了，当我学习时我以为学到的是一个锤子，但是等学到之后，才发现它已经连个螺丝刀都不如。这就是IT。



       用MFC写飞机大战，对MFC我一直没有什么太深的认识，或者说根本没有认识，只是知道有这么个东西，这次要突然用它写东西，还是一个游戏，难度肯定是有的，不过幸好的是怎么说这么长时间以来，虽然用API函数用的特别少，但是至少写代码还是不少的，有以前的积累，虽然不知道如何下手，但是，还是有信心能写好的，于是经过翻书，上网查，加上实践，几个小时后慢慢理出了一点头绪，有了头绪之后，后面的工作就简单了，无非是一些API函数不熟，需要现用现查，其他的还真没遇到什么问题，游戏有本来的仅有的白色窗口慢慢的有了背景，飞机，子弹，敌机，爆炸效果，声音效果，由单人到双人，功能逐渐丰富，慢慢的所有的一切都有了轮廓，就这样，到了临检查之前我还基本空了一两天时间，当然这两天的主要时间还是不断完善功能以及优化上。
        想想在几天之前还没有头绪，不知如何下手，几天之后就这么一个完整的程序出现在我面前，虽然说不是很好，缺点很多，但是一个简单游戏该有的它基本上具备了，然而，最美中不足的是我的代码风格，用老师的话说就是太糟烂了，缺少应有的注释，代码写的太长等等，这些还都需要改进，不过我最感到幸运的还是一前写过不少代码，那些带给我的是一种自信，是别的东西都无法替代的，只有多了解一些东西之后，当再次用到这类东西的时候才会马上想到，而不至于再去到处查，浪费时间，所以，一起花费时间做的东西是不会白费的，用以为老师的话说：你现在所学的东西将来是不会亏的，（告诉自己第一句：现在学的会为将来增加砝码）现在不学将来用到的时候还是要学，这个时间总是要花的，少不了的。我庆幸，我把时间花在了以前。（告诉自己第二句：把时间花在过去）。
         两周的实训结束了，所有带给我的不只是两个应用程序那么简单，因为那些东西现在看来本质上没有什么太难的，而真正难的是学习的过程，而一旦学会了之后，那些东西就不会再看在眼里，就像我还依然记得当我添加上第一个对话框时的兴奋，以及添第二个对话框时的不耐烦，因为那些东西只是第一次难做，而第二次只时枯燥无味的重复工作，当然这基于我浅显的理解。实训虽然已经结束，但是后续工作还有好多，比如说一个小小的程序占内存太大需要不断优化，比如说代码风格太差需要不断改善，甚至程序架构就有问题，需要重构，然后重写代码，我觉得这些工作带给我的才会更多，使我理解得更深刻。



          在实训前，个人还认为这个实训安排的不是很合理，觉得这些东西没什么用，就是学了之后，也用不上，后来发现其实眼界应该放宽一点，不能说什么语言好，什么语言不好，windows API 函数有它的局限性，就是因为他是在windows下的，缺少跨平台性，其实想想无所谓，在这里学到的不只是一种程序代码的写法，更不是一些函数的用法，主要是对系统的进一步了解，了解一些消息机制，扩展一下思维，没有什么东西是完美的，windows下的东西有他的亮点，虽说好多人都很喜欢linux（包括我），但是这并不影响对windows的学习，毕竟我们对这个系统太熟悉了，再者，谁也不能确定将来会从事什么工作，现在多学点东西总没坏处，作为一个计算机专业的菜鸟，其实是没有资格评论什么语言好，什么系统好，就像说是linux好还是windows好，C/C++好还是java好，由于对它们都是处在一个浅显的理解上，所以不能下定结论，更不能太固执的自以为是，年轻的时候，如果太自以为是，就没办法进步。
         其实，在这之前我对这些东西一直有些个人的偏见的，经过这些之后就明白了，没有最好的，只有擅长的，各种语言，各种系统都有自己的适应领域，很少有某一种语言，或者某一个系统在各个方面都做得很完美。想想自己一直偏执的以为这个好，那个不好，这个比那个好用，感觉很可笑，觉得自己眼光太狭窄了。
         所以年轻的时候一定要有一个包容的心，我告诉我自己。